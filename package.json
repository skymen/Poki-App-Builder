{
  "scripts": {
    "build": "node update-config.js",
    "build:config": "node update-config.js",
    "build:test": "node update-config.js test-config.json",
    "build:android": "npm run build && JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home npx cap build android",
    "build:android:test": "npm run build:test && JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home npx cap build android",
    "build:android:debug": "npm run build && JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home npx cap sync android && cd android && JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home ./gradlew assembleDebug",
    "build:android:debug:test": "npm run build:test && JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home npx cap sync android && cd android && JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home ./gradlew assembleDebug",
    "build:ios": "npm run build && npx cap build ios",
    "build:ios:test": "npm run build:test && npx cap build ios",
    "ios:sync": "npm run build && npx cap sync ios",
    "ios:open": "npx cap open ios",
    "ios:run": "npm run build && npx cap run ios",
    "ios:check:simulator": "xcrun simctl list devices | grep -q 'Booted'",
    "ios:boot:simulator": "npm run ios:check:simulator || (echo 'Starting iOS simulator...' && xcrun simctl boot $(xcrun simctl list devices available | grep -E 'iPhone.*\\(' | head -1 | grep -oE '[0-9A-F-]{8}-[0-9A-F-]{4}-[0-9A-F-]{4}-[0-9A-F-]{4}-[0-9A-F-]{12}') && echo 'iOS simulator booted successfully')",
    "ios:build:simulator": "npm run build && npx cap sync ios && cd ios/App && xcodebuild -workspace App.xcworkspace -scheme App -sdk iphonesimulator -configuration Debug build",
    "ios:install:simulator": "xcrun simctl install booted \"/Users/ossama/Library/Developer/Xcode/DerivedData/App-fqdhrlzmojftnefhrhshlbtoslnm/Build/Products/Debug-iphonesimulator/App.app\"",
    "ios:launch:simulator": "xcrun simctl launch booted com.dedra.ovoDimensions",
    "ios:run:simulator": "npm run ios:boot:simulator && npm run ios:build:simulator && npm run ios:install:simulator && npm run ios:launch:simulator",
    "cap:add": "npx cap add ios && npx cap add android",
    "cap:sync": "npm run build && npx cap sync",
    "cap:sync:test": "npm run√ß build:test && npx cap sync",
    "cap:open:ios": "npx cap open ios",
    "cap:open:android": "npx cap open android",
    "cap:run:ios": "npx cap run ios",
    "cap:run:android": "npx cap run android",
    "android:check:emulator": "adb devices | grep -q 'device$'",
    "android:boot:emulator": "npm run android:check:emulator || (echo 'Starting Android emulator...' && emulator -list-avds | head -1 | xargs -I {} sh -c 'emulator -avd {} & sleep 10 && adb wait-for-device && echo \"Android emulator booted successfully\"')",
    "android:install": "adb install -r \"/Users/ossama/Documents/Poki App Builder/android/app/build/outputs/apk/debug/app-debug.apk\"",
    "android:launch": "adb shell am start -n com.dedra.ovoDimensions/.MainActivity",
    "android:run": "npm run android:boot:emulator && npm run build:android:debug && npm run android:install && npm run android:launch",
    "android:run:emulator": "npm run android:boot:emulator && npm run build:android:debug && npm run android:install && npm run android:launch",
    "simulators:status": "echo 'üì± iOS Simulator:' && (npm run ios:check:simulator && echo '‚úÖ Running' || echo '‚ùå Not running') && echo 'ü§ñ Android Emulator:' && (npm run android:check:emulator && echo '‚úÖ Running' || echo '‚ùå Not running')",
    "simulators:boot": "npm run ios:boot:simulator && npm run android:boot:emulator",
    "android:logs": "adb logcat | grep -i capacitor"
  },
  "dependencies": {
    "@capacitor/android": "^7.4.3",
    "@capacitor/cli": "^7.4.3",
    "@capacitor/core": "^7.4.3",
    "@capacitor/ios": "^7.4.3"
  },
  "devDependencies": {
    "typescript": "^5.9.2"
  }
}
